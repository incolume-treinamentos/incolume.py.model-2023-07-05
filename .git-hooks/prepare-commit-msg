#!/bin/bash

MESSAGE=$(cat $1)
COMMITFORMAT="^((feat|feature|fix|bugfix|chore|refactor|docs|style|test|perf|ci|build|revert|other)(\((.*)\))?\!?: #([0-9]+)|(Merge|Bumping|Revert)) (.*)$"
if ! [[ "$MESSAGE" =~ $COMMITFORMAT ]]; then
  message="Your commit was rejected due to the commit message. Skipping..."
  message+="\n\nPlease use the following format:"
  message+="\n<type>(optional scope): #id-issue <description>"
  message+="\n\nExamples:"
  message+="\n#1-> git commit -m 'feature: #1234 feature example comment'"
  message+="\n#2-> git commit -m 'fix(ui): #4321 bugfix example comment'"
  message+="\n#3-> git commit -m 'fix!: #4321 chore example comment with possible breaking change'"
  message+="\n#4-> git commit -m 'chore!: #4321 chore example comment with possible breaking change'"
  message+="\n#5-> git commit -m 'refactor(chore)!: #4321 chore example comment with possible breaking change'"
  message+="\n#6-> git commit -m 'chore(bugfix)!: #4321 drop support for Python 2.6' -m 'BREAKING CHANGE: Some features not available in Python 2.7-.'"
  message+="\n\nMore details on docs/user_guide/CONVENTIONAL_COMMITS.md or https://www.conventionalcommits.org/pt-br/v1.0.0/\n"
  echo -e "\033[1;31mERROR: $message\033[0m";
  exit 1
fi
